#+STARTUP: showall
#+STARTUP: lognotestate
#+TAGS:
#+SEQ_TODO: TODO STARTED DONE DEFERRED CANCELLED | WAITING DELEGATED APPT
#+DRAWERS: HIDDEN STATE
#+TITLE: Hello world tutorial
#+CATEGORY: 
#+PROPERTY: header-args: lang           :varname value
#+PROPERTY: header-args:sqlite          :db /path/to/db  :colnames yes
#+PROPERTY: header-args:R               :results output


* Objective

The objectives of this lab are:

1. learn to use Visual Studio
2. learn to use the std::vector class

* Clone the files to your computer

For this course we will host our lab materials in github. Specifically at https://github.com/dmgerman/csc116

* Download the cmake files 

1. Download the following files:
   1. https://github.com/dmgerman/csc116


This will create  directory for your lab. Called lab01.

* Part 1: hello world

Go to the subdirectory called part1. You should  have two files: XXX

#+BEGIN_EXAMPLE

#+END_EXAMPLE


** Run cmake

The first thing we need is to create the project files needed by our compiler.
We are going to use a program called cmake that simplifies this process and makes it
portable across platforms and compilers.


1. Make sure you have the CMakeLists.txt and helloworld.cpp files in the current directory.

The CMakeLists.txt file is very simple: XXX add contents of cmake

#+BEGIN_SRC cmake
cmake_minimum_required(VERSION 2.8.9)
project(helloworld)

add_executable(helloword hello.cpp)
#+END_SRC

The important line to consider is the "add_executable". It tells the compiler to create an executable called /helloworld/ 
using the source code in /hello.cpp/

2. Run the following commands:

#+BEGIN_SRC sh
mkdir build
cd build
cmake .. -G 'Visual Studio 14 2015'
#+END_SRC

3. The result is various files: XXX add these files

[[file:files.png]]

* Run Visual Studio

Run Microsoft Visual Studio 2015.

1. Using File-Open-Project/Solution load the file /helloworld.sln/ in the build directory you created. See below:

[[file:loadSolution.png]]

2. *Important* We need to make helloworld the default project to build. In the solution explorer (right hand side). See below.

[[file:setAsStartup.png]]

3. Using the solution explorer, open the file /hello.cpp/. Simply double-click on the filename. See below:

[[findHello.png]]

4. At this point you should be looking at something like this:

[[file:visualStudioHello.png]]


5. As in C, C++ requires two states: compilation and linking. In Visual Studio both of these steps are 
encapsulated in a process call /Build/. In our case the Solution and  the project "helloworld" are the same.

Build the solution by choosing /Build-Build Solution/ from the menu.

In the output window you will see a message that says your build was successful:

[[file:success.png]]

6. Run the solution:

Select /Debug-Start without Debugging/ to run the program. This is your first program in C++.



Note that if you use /Debug-Start Debugging/ the terminal will flash in front of you and disappear.
See this question and answer in Stack Overflow: 

http://stackoverflow.com/questions/1775865/preventing-console-window-from-closing-on-visual-studio-c-c-console-applicatio

* Part 2: Printing multiple numbers

Close Visual Studio.

** Create and load the solution

Go now to the directory ~part2~ of the materials. As you did with ~part1~:

1. create a directory called build and run ~cmake~ in it:

#+BEGIN_SRC sh
mkdir build
cd build
cmake .. -G 'Visual Studio 14 2015'
#+END_SRC


2. load the solution ~numbers.sln~ into Visual Studio
3. select numbers as the default  solution

** Modify the program. 

Edit the file ~numbers.cpp~. Make it print the numbers from 0 to 9 (inclusive), one per line. Use a for loop for that.

- Make sure you use a constant at the top of your program called ~MAX_NUMBER~. Declare it 
~const int~

- *Question* In this program you have declared two variables: ~MAX_NUMBER~ and the counter for the for-loop.
   Can these variables be declared ~auto~? Try it.

* Part 3: reading and adding multiple numbers

Modify your program to read 

Close Visual Studio.

** Create and load the solution

Go now to the directory ~part3~ of the materials. As you did with ~part1~:

1. create a directory called build and run ~cmake~ in it:

#+BEGIN_SRC sh
mkdir build
cd build
cmake .. -G 'Visual Studio 14 2015'
#+END_SRC


2. load the solution ~readnumbers.sln~ into Visual Studio
3. select numbers as the default  solution

** Modify the program

Edit the file ~readnumbers.cpp~. 
